{
  "strategies": {
    "oracle_full_pipeline": {
      "name": "Oracle Full Pipeline",
      "description": "Complete 7-step Oracle query pipeline with discovery and LLM generation",
      "when_to_use": {
        "complexity": "complex",
        "needs_discovery": true,
        "natural_language": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Analyze Query",
          "tool": "deep_analyze_query",
          "description": "Extract intent and entities from natural language"
        },
        {
          "step": 2,
          "name": "Match Schema",
          "tool": "smart_schema_match",
          "description": "Find relevant tables and columns with context"
        },
        {
          "step": 3,
          "name": "Discover Data",
          "tool": "discover_sample_data",
          "description": "Get sample data for context",
          "optional": true,
          "critical": false
        },
        {
          "step": 4,
          "name": "Generate SQL",
          "tool": "generate_sql",
          "description": "Create SQL using LLM with full context"
        },
        {
          "step": 5,
          "name": "Optimize SQL",
          "tool": "optimize_sql_smart",
          "description": "Optimize the generated query",
          "optional": true
        },
        {
          "step": 6,
          "name": "Execute Query",
          "tool": "execute_query",
          "description": "Run the SQL query"
        },
        {
          "step": 7,
          "name": "Format Results",
          "tool": "format_results",
          "description": "Convert to natural language response",
          "final": true
        }
      ],
      "timeout_ms": 600000,
      "halt_on_critical_error": true,
      "allow_partial_success": false
    },
    
    "oracle_simple_query": {
      "name": "Oracle Simple Query",
      "description": "Direct SQL execution for simple or pre-written queries",
      "when_to_use": {
        "complexity": "simple",
        "has_sql": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Validate SQL",
          "tool": "validate_sql",
          "description": "Check SQL syntax",
          "optional": true
        },
        {
          "step": 2,
          "name": "Execute Query",
          "tool": "execute_query",
          "description": "Run the SQL query"
        },
        {
          "step": 3,
          "name": "Format Results",
          "tool": "format_results",
          "description": "Convert to user-friendly format",
          "final": true
        }
      ],
      "timeout_ms": 10000
    },
    
    "oracle_discovery": {
      "name": "Oracle Discovery",
      "description": "Explore database schema and data",
      "when_to_use": {
        "intent": "explore",
        "discovery_needed": true
      },
      "steps": [
        {
          "step": 1,
          "name": "List Tables",
          "tool": "list_tables",
          "description": "Get all available tables"
        },
        {
          "step": 2,
          "name": "Discover Enums",
          "tool": "discover_enums",
          "description": "Find enumeration mappings",
          "parallel": true
        },
        {
          "step": 3,
          "name": "Sample Data",
          "tool": "discover_sample_data",
          "description": "Get sample data from key tables",
          "limit_tables": 5,
          "final": true
        }
      ],
      "timeout_ms": 15000
    },
    
    "oracle_truly_intelligent": {
      "name": "Intelligent Self-Learning Oracle Pipeline",
      "description": "Seeks deep understanding, never makes assumptions, learns from errors",
      "philosophy": "understand_dont_guess",
      "when_to_use": {
        "complex_queries": true,
        "needs_adaptation": true,
        "error_recovery": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Deep Semantic Analysis",
          "tool": "deep_analyze_query",
          "description": "Understand what user really wants",
          "critical": false,
          "retry_on_error": true,
          "max_retries": 3
        },
        {
          "step": 2,
          "name": "Intelligent Schema Mapping",
          "tool": "smart_schema_match",
          "description": "Map concepts to database schema semantically",
          "critical": false,
          "on_insufficient_matches": "explore_schema_semantically"
        },
        {
          "step": 3,
          "name": "Synthesis and SQL Generation",
          "tool": "generate_sql",
          "description": "Generate SQL using all accumulated knowledge",
          "critical": false,
          "uses_all_context": true
        },
        {
          "step": 4,
          "name": "Intelligent Optimization",
          "tool": "optimize_sql_smart",
          "description": "Optimize considering semantic intent",
          "critical": false,
          "optional": true
        },
        {
          "step": 5,
          "name": "Execute with Learning",
          "tool": "execute_query",
          "description": "Run query and learn from any errors",
          "critical": false,
          "on_error": "semantic_error_analysis",
          "can_backtrack_to": [1, 2, 3]
        },
        {
          "step": 6,
          "name": "Format with Understanding",
          "tool": "format_results",
          "description": "Present results with context of what was learned",
          "final": true
        }
      ],
      "timeout_ms": 600000,
      "intelligence_features": {
        "never_drop_concepts": true,
        "always_seek_understanding": true,
        "accumulate_semantic_knowledge": true,
        "explain_reasoning_to_user": true,
        "max_pipeline_restarts": 3,
        "learn_from_every_error": true
      }
    },
    
    "multi_tool_sequential": {
      "name": "Sequential Tool Execution",
      "description": "Execute multiple tools in sequence with data passing",
      "when_to_use": {
        "strategy": "MULTIPLE_TOOLS"
      },
      "steps": "dynamic",
      "timeout_ms": 20000
    },
    
    "oracle_adaptive_pipeline": {
      "name": "Oracle Adaptive Intelligence Pipeline",
      "description": "Intelligently adapts to query complexity using smart analysis",
      "when_to_use": {
        "complexity": "adaptive",
        "needs_intelligence": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Deep Query Analysis",
          "tool": "deep_analyze_query",
          "description": "Extract ALL semantic concepts"
        },
        {
          "step": 2,
          "name": "Smart Schema Match",
          "tool": "smart_schema_match",
          "description": "Intelligent schema matching with all tools"
        },
        {
          "step": 3,
          "name": "Generate SQL",
          "tool": "generate_sql",
          "description": "Create SQL using intelligent context"
        },
        {
          "step": 4,
          "name": "Smart Optimize",
          "tool": "optimize_sql_smart",
          "description": "Optimize with complexity checking"
        },
        {
          "step": 5,
          "name": "Execute Query",
          "tool": "execute_query",
          "description": "Run the optimized query"
        },
        {
          "step": 6,
          "name": "Format Results",
          "tool": "format_results",
          "description": "Convert to natural language",
          "final": true
        }
      ],
      "timeout_ms": 600000,
      "allow_partial_success": true
    },
    
    "oracle_discovery_first": {
      "name": "Oracle Discovery-First Strategy",
      "description": "Prioritizes understanding data before query generation",
      "when_to_use": {
        "intent": "explore",
        "unfamiliar_data": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Deep Analyze",
          "tool": "deep_analyze_query",
          "description": "Understand query intent deeply"
        },
        {
          "step": 2,
          "name": "List Tables",
          "tool": "list_tables",
          "description": "Get available tables"
        },
        {
          "step": 3,
          "name": "Discover Semantics",
          "tool": "discover_column_semantics",
          "description": "Understand column meanings",
          "parallel": true
        },
        {
          "step": 4,
          "name": "Infer Relationships",
          "tool": "infer_relationships",
          "description": "Find table connections",
          "parallel": true
        },
        {
          "step": 5,
          "name": "Smart Schema Match",
          "tool": "smart_schema_match",
          "description": "Match with full context"
        },
        {
          "step": 6,
          "name": "Generate and Execute",
          "tool": "generate_sql",
          "description": "Create SQL with rich context"
        },
        {
          "step": 7,
          "name": "Execute Query",
          "tool": "execute_query",
          "description": "Run the query",
          "final": true
        }
      ],
      "timeout_ms": 600000
    },
    
    "oracle_performance_focused": {
      "name": "Oracle Performance-Optimized Pipeline",
      "description": "Focuses on query performance with smart optimization",
      "when_to_use": {
        "performance_critical": true,
        "large_dataset": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Quick Analysis",
          "tool": "analyze_query",
          "description": "Fast query analysis"
        },
        {
          "step": 2,
          "name": "Schema Match",
          "tool": "match_schema",
          "description": "Quick schema matching"
        },
        {
          "step": 3,
          "name": "Generate SQL",
          "tool": "generate_sql",
          "description": "Create initial SQL"
        },
        {
          "step": 4,
          "name": "Smart Optimize",
          "tool": "optimize_sql_smart",
          "description": "Aggressive optimization",
          "config": {"complexity_threshold": 0.1}
        },
        {
          "step": 5,
          "name": "Explain Plan",
          "tool": "explain_plan",
          "description": "Verify performance",
          "parallel": true,
          "optional": true
        },
        {
          "step": 6,
          "name": "Execute",
          "tool": "execute_query",
          "description": "Run optimized query",
          "config": {"limit": 1000},
          "final": true
        }
      ],
      "timeout_ms": 600000
    },
    
    "oracle_validated_pipeline": {
      "name": "Oracle Schema-Validated Pipeline",
      "description": "Ensures generated SQL is validated against actual schema before execution",
      "when_to_use": {
        "schema_validation": true,
        "high_accuracy": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Deep Analysis",
          "tool": "deep_analyze_query",
          "description": "Extract all semantic concepts"
        },
        {
          "step": 2,
          "name": "Schema Match",
          "tool": "smart_schema_match",
          "description": "Smart schema matching"
        },
        {
          "step": 3,
          "name": "Discover Data",
          "tool": "discover_sample_data",
          "description": "Get sample data for context",
          "optional": true
        },
        {
          "step": 4,
          "name": "Generate SQL",
          "tool": "generate_sql",
          "description": "Create SQL with full context"
        },
        {
          "step": 5,
          "name": "Validate Schema",
          "tool": "validate_schema_sql",
          "description": "Validate SQL against actual schema",
          "on_error": "retry_with_corrections"
        },
        {
          "step": 6,
          "name": "Regenerate if Invalid",
          "tool": "generate_sql",
          "description": "Regenerate SQL with corrections",
          "condition": "validation.valid == false"
        },
        {
          "step": 7,
          "name": "Execute Query",
          "tool": "execute_query",
          "description": "Run validated SQL"
        },
        {
          "step": 8,
          "name": "Format Results",
          "tool": "format_results",
          "description": "Convert to natural language",
          "final": true
        }
      ],
      "timeout_ms": 600000,
      "retry_on_validation_failure": true,
      "max_retries": 2
    },
    
    "oracle_adaptive_retry_pipeline": {
      "name": "Oracle Adaptive Retry Pipeline",
      "description": "Validates and retries SQL with progressive constraints on each attempt",
      "when_to_use": {
        "schema_validation": true,
        "high_accuracy": true,
        "adaptive_retry": true
      },
      "steps": [
        {
          "step": 1,
          "name": "Deep Analysis",
          "tool": "deep_analyze_query",
          "description": "Extract all semantic concepts"
        },
        {
          "step": 2,
          "name": "Schema Match",
          "tool": "smart_schema_match",
          "description": "Smart schema matching"
        },
        {
          "step": 3,
          "name": "Discover Data",
          "tool": "discover_sample_data",
          "description": "Get sample data for context",
          "optional": true
        },
        {
          "step": 4,
          "name": "Generate SQL",
          "tool": "generate_sql",
          "description": "Create SQL with full context",
          "config": {
            "constraint_level": "standard"
          }
        },
        {
          "step": 5,
          "name": "Validate Schema",
          "tool": "validate_schema_sql",
          "description": "Validate SQL against actual schema",
          "on_error": "continue"
        },
        {
          "step": 6,
          "name": "Regenerate with Constraints Level 1",
          "tool": "generate_sql",
          "description": "Regenerate SQL with stricter constraints",
          "condition": "validation.valid == false && retry_count == 0",
          "config": {
            "constraint_level": "strict",
            "additional_constraint": "STRICT MODE: Use ONLY the exact table and column names from validation.suggestedCorrections. Do NOT assume any columns exist unless explicitly listed."
          }
        },
        {
          "step": 7,
          "name": "Revalidate Level 1",
          "tool": "validate_schema_sql",
          "description": "Validate corrected SQL",
          "condition": "corrected_sql_1 != null"
        },
        {
          "step": 8,
          "name": "Regenerate with Constraints Level 2",
          "tool": "generate_sql",
          "description": "Final regeneration with ultra-strict constraints",
          "condition": "validation_1.valid == false && retry_count == 1",
          "config": {
            "constraint_level": "ultra_strict",
            "additional_constraint": "ULTRA-STRICT MODE: First LIST each table and column you will use (e.g., Tables: ORDERS, CUSTOMERS; Columns: ORDERS.ORDER_ID, CUSTOMERS.CUSTOMER_NAME). Then write the SQL using ONLY those listed items."
          }
        },
        {
          "step": 9,
          "name": "Execute Query",
          "tool": "execute_query",
          "description": "Run validated SQL",
          "on_error": "analyze_and_feedback"
        },
        {
          "step": 10,
          "name": "Format Results",
          "tool": "format_results",
          "description": "Convert to natural language",
          "final": true
        }
      ],
      "timeout_ms": 50000,
      "retry_tracking": true,
      "progressive_constraints": true,
      "max_retries": 2
    }
  },
  
  "selection_rules": {
    "priority_order": [
      "oracle_truly_intelligent",
      "oracle_adaptive_pipeline",
      "oracle_simple_query",
      "oracle_validated_pipeline",
      "oracle_discovery_first",
      "oracle_performance_focused",
      "oracle_discovery",
      "oracle_full_pipeline"
    ],
    "default_strategy": "oracle_truly_intelligent",
    "fallback_on_error": true,
    "selection_hints": {
      "complex_query": "oracle_truly_intelligent",
      "needs_understanding": "oracle_truly_intelligent",
      "complex_aggregations": "oracle_adaptive_pipeline",
      "unknown_schema": "oracle_discovery_first",
      "large_tables": "oracle_performance_focused",
      "simple_select": "oracle_simple_query"
    }
  },
  
  "configuration": {
    "enable_progress_updates": true,
    "progress_update_interval_ms": 5000,
    "enable_partial_results": true,
    "log_orchestration_decisions": true,
    "max_parallel_tools": 3
  }
}